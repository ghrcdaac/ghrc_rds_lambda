name: Build & Release
on:
  pull_request:
  push:
    tags:
        - v*
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8' ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#      - name: Test with pytest
#        run: |
#          coverage run -m pytest
#          coverage lcov -o ./coverage/lcov.info
#      - name: Coveralls
#        uses: coverallsapp/github-action@master
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}

  create_release:
    needs: build
    if: contains(github.ref, '/tags/v')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8' ]
    steps:
        - uses: actions/checkout@v2
        - name: Get tag version
          id: tag_name
          run: echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
        - name: Get repo name
          id: repo_name
          run: echo ::set-output name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | sed -e "s/:refs//")
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v2
          with:
            python-version: ${{ matrix.python-version }}
        - name: Build a release
          run: |
            python --version
            bash create_package.py
            bash create_release.sh $SOURCE_TAG
          env:
            SOURCE_TAG: ${{ steps.tag_name.outputs.SOURCE_TAG }}
            SECRET_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            GITHUB_REPO: ${{ steps.repo_name.outputs.REPOSITORY_NAME }}
              